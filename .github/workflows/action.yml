name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  # concurrency: 
  #   group: ${{ github.head_ref || github.run_id }}
  #   cancel-in-progress: true

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [veet, nxtjs, cra]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        # working-directory: frontend-applications/${{ matrix.app }}
        context: ./frontend-applications/${{ matrix.app }}
        platforms: linux/amd64,linux/arm64
        # file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{matrix.app}}:latest
  
  build-node-backend:
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx4g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
    strategy:
      matrix:
        app: [api, spring]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        # working-directory: server-applications/${{ matrix.app }}
        context: ./server-applications/${{ matrix.app }}
        platforms: linux/amd64,linux/arm64
        # file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{matrix.app}}:latest


  # build-java-backend:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-java@v3
  #     with:
  #       distribution: temurin
  #       java-version: 17
        
  #   - name: Setup Gradle
  #     uses: gradle/gradle-build-action@v2
  #     with:
  #       gradle-version: 7.5.1
    

  #   - name: Save the artifact
  #     uses: actions/upload-artifact@master
  #     with:
  #       working-directory: server-applications/demo
  #       name: demo-0.0.1-SNAPSHOT.jar
  #       path: build/libs
  
  access-droplet:
    runs-on: ubuntu-latest
    needs: [build-node-backend, build-frontend] 
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Copy file via scp
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.SSH_HOST }}
        USERNAME: ${{ secrets.SSH_USERNAME }}
        KEY: ${{ secrets.SSH_KEY }}
      with:
        source: "."
        target: "/opt/app"

    - name: Executing remote  command
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        USERNAME: ${{ secrets.SSH_USERNAME }}
        KEY: ${{ secrets.SSH_KEY }}
        script: |
          cd /opt/app
          docker-compose up --build &

  # access-droplet:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Deploy node app
  #       uses: fifsky/ssh-action@master
  #       with:
  #         host: ${{secrets.SSH_HOST}}
  #         key: ${{secrets.SSH_KEY}}
  #         user: ${{secrets.SSH_USERNAME}}
  #         command: | 
  #           git clone https://github.com/too-old-to-code/nginx-play.git